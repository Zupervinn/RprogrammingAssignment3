library(dplyr)


best <- function (state, outcome){
        data <- read.csv("outcome-of-care-measures.csv", na.string ="Not Available", stringsAsFactors = FALSE )
        selectdata<-(select(data, State, Hospital.Name, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia ))
        colnames(selectdata)[colnames(selectdata) == 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack'] <- 'heart attack'
        colnames(selectdata)[colnames(selectdata) == 'Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure'] <- 'heart failure'
        colnames(selectdata)[colnames(selectdata) == 'Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia'] <- 'pneumonia'
        list('heart attack'=3, 'heart failure'= 4, 'pneumonia'=5)
        selectdata<- na.omit(selectdata)
        
        liststates<- selectdata$State
        testvalid<- state %in% liststates
        
        listnames<- names(selectdata)
        testnamevalid<- outcome %in% listnames
        
        if(testvalid == "FALSE") {stop("invalid state")}
        if(testnamevalid == "FALSE") {stop("invalid outcome")}
        
        else{
        statedata <- selectdata [grep(state,selectdata$State),]
        orderdata <- statedata[order(statedata[,outcome]),]
        besthospital<- slice(best<- filter(orderdata, State ==state),1)$Hospital.Name
        return (besthospital)}
}      


